#  CC       C compiler
#  CFLAGS   flags for building C files
#  CFDYN    additional flags for dynamic functions
#  RLINK    flags for linking run-time system
#  RLIBS    libraries to link with run-time system
#  XLIBS    libraries to link for graphics
#  XPMDEFS  definitions for building XPM library

# Note: -lsocket is not available on some Linux systems,
# but if your system has it you might need to add it to RLIBS
# Useful development flags: -g -Wall -Wno-missing-braces -fsanitize=address -fno-omit-frame-pointer
# -g and -fsanitize=address should also be added to the linker flags
# make sure to also change the optimization to level 0 or 1

CC = @CC@

CFLAGS = @CFLAGS@ -I../libtp -I../gdbm -I../xpm
LDFLAGS= @LDFLAGS@
LIBS= @LIBS@
CPPFLAGS = @CPPFLAGS@

JV_LDFLAGS = @JV_LDFLAGS@
GL_CFLAGS = @GL_CFLAGS@
GL_LDFLAGS = @GL_LDFLAGS@

CFDYN = @CFDYN@
RLINK = @RLINK@ -L../../bin
RLIBS = -ltp $(LIBS) -L../../bin -lm -lgdbm -ldl @RLIBS@

XLIBS = @XLIBS@
XPMDEFS = -DZPIPE
GDBM=gdbm
LIBTP=libtp

# with strip
DASHX=@DASHX@

# If graphics is enabled
GRAPHICS= @GRAPHICS@
XL= @XL@
XPM= @XPM@
DRAWSTRING= @DRAWSTRING@
COMMONDRAWSTRING= @COMMONDRAWSTRING@

# control versbose/silent build
CMNT=@CMNT@
SLNT=@SLNT@
DASHS=@DASHS@

BITS=@BITS@

# Windows
O=@OBJ@
EXE=@EXE@
NT=@NT@
DNT=@DNT@
WINSTKLDFLAG=@WINSTKLDFLAG@
WINGLIBS=-lopengl32 -lglu32 -lkernel32 -luser32 -lgdi32 -lcomdlg32
