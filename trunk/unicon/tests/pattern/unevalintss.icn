## unevalcharss.icn
## Paden Rumsey
## July 8, 2016

## The scoping rules for class are unique. An object cannot be passed into a metho
## or function unevaluated from main unless the object is global. It will not register
## the variable as unknown it will simply tell you "cset or integer required" 

procedure main()
    c := charfunc()
    x := 5
    while s := read() do {
	copy := s
	p := Len(5)
	s ?? p -> out
	write(out)
	p := Len(`c.char_return(5, 3)`)
	s ?? p -> out
	write(out)
	p := Len(`charreturn(5)`)
	s ?? p -> out
	write(out)
	p := Len(`c.one`)
	s ?? p -> out
	write(out)
	p := Len(`x`)
	s ?? p -> out
	write(out)
	
	p := Pos(5)
	s ?? p -> out
	write(out)
	p := Pos(`charreturn(5)`)
	s ?? p -> out
	write(out)
	p := Pos(`c.char_return(5)`)
	s ?? p -> out
	write(out)
	p := Pos(`c.one`)
	s ?? p -> out
	write(out)
	p := Pos(`x`)
	s ?? p -> out
	write(out)

	p := Tab(5)
	s ?? p -> out
	write(out)
	p := Tab(`charreturn(5)`)
	s ?? p -> out
	write(out)
	p := Tab(`c.char_return(5)`)
	s ?? p -> out
	write(out)
	p := Tab(`c.one`)
	s ?? p -> out
	write(out)
        p := Tab(`x`)
	s ?? p -> out
	write(out)

	p := Rtab(5)
 	s ?? p -> out
	write(out)
	p := Rtab(`charreturn(5)`)
	s ?? p -> out
	write(out)
	p := Rtab(`c.char_return(5)`)
	s ?? p -> out
	write(out)	
	p := Rtab(`c.one`)
	s ?? p -> out
	write(out)
        p := Rtab(`x`)
	s ?? p -> out
	write(out)

	p := Rpos(5)
	s ?? p -> out
	write(out)
	p := Rpos(`charreturn(5)`)
	s ?? p -> out
	write(out)
	p := Rpos(`c.char_return(5)`)
	s ?? p -> out
	write(out)
	p := Rpos(`c.one`)
	s ?? p -> out
	write(out)
	p := Rpos(`x`)
	s ?? p -> out
	write(out)
    }
end

procedure charreturn(param)
    return 5
end

class charfunc(one, two, three)

method char_return(a, b)
   return 5
end

initially()
   one := 1
   two := 2
   three := 3
end
