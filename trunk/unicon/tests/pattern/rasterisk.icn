## rasterisk.icn
## Paden Rumsey
## July 10, 2016

procedure main()
    while s := read() do {
	write("Simple Arbno/Asterisk")
	regx :=  <[s]* "i">
	write(image(regx))
	match_string(s, regx)

	write("String Asterisk")
	regx := <"the"*>
	write(image(regx))
	match_string(s, regx)

	write("Asterisk Alternation with Csets")
	regx := <[a]* | [b]*>
	write(image(regx))
	match_string(s, regx)
	
        write("Asterisk Alternation with Parenthesis")
	regx := <"ll"* | "ss"*>
	write(image(regx))
	match_string(s, regx)
	
	write("Cset Asterisk")
	regx := <'i'*>
	write(image(regx))
	match_string(s, regx)

	write("Cset Asterisk with Cset Brackets")
	regx := <[i]*>
	write(image(regx))
	match_string(s, regx)

	## This "nested Arbno" actually gives us a seg fault. Weird. 

	write("Arbno in Arbno (Complex Arbno)")
	regx := Arbno(<"s"*>)
	write(image(regx))
	match_string(s, regx)

        write("Asterisk in Asterisk (Complex Arbno)")
	regx :=<("s"*)*>
	write(image(regx))
	match_string(s, regx)

	write("Asterisk Used with Brackets")
	regx := <[s]{2}*>
	write(image(regx))
	match_string(s, regx)

	write("The same as <[s]{2}*>) but written with pattern functions")
	regx := Arbno(pattern_concat('s', 's'))
	write(image(regx))
	match_string(s, regx)

    }
end

procedure match_string(s, r)
    r := r -> out || Rem() -> remain
    write("The string is: ", s)
    if s ?? r then {
	write("The matched string is ", out, " the remainder is ", remain)
	}
    else
	write("The regex failed to match")
    write("\n")
end
