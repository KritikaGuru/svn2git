global mutx
global que

procedure main()
   que := []
   i:=0
    mutx := mutex()

    p := create produceodd()
    c := create produceeven()
   
    write("begin---")
 
    thread(p)
    thread(c)

   while i<100 do{
     lock(mutx)
     if *que>0 then{
        x:= pop(que)
        writes(x, "  ")
        i+:=1
       }
     unlock(mutx)
   }
    
    write("\nDone!")
    

   join(p)
   join(c)
    write(" should exit now ... ")
end


procedure produceodd()
  every i:=1 to 100 by 2 do{
    lock(mutx)
    put(que, i)
    unlock(mutx)
    }
end


procedure produceeven()
  every i:=2 to 100 by 2 do{
    lock(mutx)
    put(que, i)
    unlock(mutx)
    }
end
