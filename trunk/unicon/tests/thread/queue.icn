global mutx
global que

procedure main()
   if not (&features == "concurrent threads") then
      stop("This program requires concurrent threads.")

   que := []
   i:=0
   mutx := mutex()

   write("begin---")

   p := thread produceodd()
   c := thread produceeven()
   
   while i<100 do{
     critical mutx:
        if *que>0 then{
           x:= pop(que)
           writes(x, "  ")
           i+:=1
           }
     }
    
    write("\nDone!")
    
   wait(p)
   wait(c)

   write(" exiting now ... ")
end


procedure produceodd()
  every i:=1 to 100 by 2 do
    critical mutx: put(que, i)

end


procedure produceeven()
  every i:=2 to 100 by 2 do
    critical mutx: put(que, i)
end
