global gsum
procedure main(argv)
   gsum:=0
   thrd := []

   if *argv>0 then
      n:=integer(argv[1]) | stop ("arg must be integer")
    else
      n:=1

   x := 10^8
   d:= x / n

   write(n , " thread(s) will sum ", x, " ones.")
   write("The work will be divided equally between them. Please wait... ")

   t:=&now
   every i:=!n do put(thrd, thread suma(d, i))
   every wait(!thrd)

   # print the sum. (x-d*n) is just an error correction when using "odd" # of threads.
   write("sum=",gsum+(x-d*n))
   
   write("time:", &now-t, " seconds")
end

procedure suma(n, id)
   local sum:=0
   static region
   initial  region := mutex()

   every !n do sum+:=1

   critical region:  gsum +:= sum

   write("Thread ", id , " is done")
end

