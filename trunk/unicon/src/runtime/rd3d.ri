/*
 *  File: rd3d.ri
 *     3D facilities Direct3d support routines
 *     (Under construction.  Get your hopes up.)
 */

/*
 * Initialize the 3D subsystem for rendering.
 */
void init_3dcanvas(wbp  w)
{
}

/*
 * draw a cube
 */
void cube(double length, double x, double y, double z, int gen)
{
}

/*
 * draw a cylinder
 */
void cylinder(double radius1, double radius2, double height,
              double x,  double y, double z, int slices, int rings, int gen)
{
}

/*
 * traverse the given list and set material properties.
 * RGBA are given in X11-style 0-65535 range
 */
int determinematerial(temp, r, g, b, a) 
char *temp;
C_integer r, g, b, a;
{
   return Failed;
}

/*
 * draw a disk. angle2 < 360 degrees specifies a partial disk
 */
void disk(double radius1, double radius2, double angle1, double angle2,
          double x, double y, double z, int slices, int rings, int gen)
{
}

/*
 * returns the current value of the specified light # in the result buf
 */
int getlight(int light, char* buf)
{
}

/*
 * returns the current material properties
 */
int getmaterials(char* buf)
{
   return Failed;
}

int gettexture(wbp w, dptr dp)
{
   return Failed;
}

/*
 * draw a sphere
 */
void sphere(double radius, double x, double y, double z, int slices, int rings, int gen)
{
}

/*
 * draw a torus
 */
void torus(double radius1, double radius2, double x,double y, double z,
	   int slices, int rings, int gen)
{
}

/* other helper functions */
  	
/*
 * pop a matrix from either the projection or the modelview matrix stack
 */
int popmatrix()
{
}

/*
 * push a matrix onto the current stack -- that is
 * either the modelview of projection matrix stack
 */
int pushmatrix()
{
}


/*
 * Functions that implement redrawing of windows.
 */

/*
 * redraws a 3D window by traversing the specifed list
 */
int redraw3D(wbp w)
{
}

int identitymatrix()
{
   return Failed;
}

/* boolean on automatic texture coordinate generation */
int setautogen(int i)
{
   return Failed;
}

int setmatrixmode(char *s)
{
   if (!strcmp("modelview", temp)) { /* ... */ }
   else if (!strcmp("projection", temp)) { /* ... */ }
   else return Failed;
   return Failed;
}

int settexture(int i)
{
   return Failed;
}
