#
# $Id: methodlistener.icn,v 1.1 2004-02-12 17:07:56 rparlett Exp $
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

package util

import lang

#
# A Listener with functionality to invoke
# a named method in an instance.
#
class MethodListener : Listener(obj,
                                meth)
   method get_object()
      return obj
   end

   method get_method()
      return meth
   end

   # By default, just invoke the method.  But this may be
   # overridden to filter out events - see FilterListener.
   # @p
   method fire(event) 
      call(event)
   end

   method call(event)
      meth(obj, event)
   end

   # Look for the method in the given object, stopping on error.
   # @p
   method find_method(obj, method_name)
      local t, m
      t := lang::get_class(obj) | stop("no class found for ", image(obj))
      every m := !t.get_methods() do {
          if m.get_method_name() == method_name then
             return m.get_as_procedure()
      }
      stop("no such method ", method_name)
   end

   initially(obj, method_name) 
      self.obj := obj
      self.meth := find_method(obj, method_name)
end
