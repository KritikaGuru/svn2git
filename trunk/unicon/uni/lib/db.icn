procedure dbopen(dsn,table,user,password)
   return open(dsn,"o",table,user,password)
end

procedure dbfetch(db)
   dbfetch := fetch
   return fetch(db)
end

procedure dbclose(db)
   dbclose := close
   return close(db)
end

procedure dbsql(db,sqlstatement)
   dbsql := sql
   return sql(db,sqlstatement)
end

### unfinished implementations of former built-ins below here

procedure dbdelete(db, filter)
#   if not (/filter := "") then filter := " WHERE " || filter
#   if t := (image(db) ? { tab(find(":")+1) & tab(0) }) then
#      return sql(db, "DELETE FROM " || blah blah || filter)
end

procedure dbinsert(db, rec)
   s := "INSERT INTO " || t || "("
   every k := key(rec) do { s ||:= k; s||:= "," }
   s := s[1:-1] # delete trailing comma?
   s ||:= ") VALUES ("
   every k := key(rec) do { s ||:= rec[k]; s||:= "," }
   s := s[1:-1] # delete trailing comma?
   s ||:= ")"
   return sql(db, s)
end

procedure dbselect(db, cols, filter, order)
  /cols := "*"
  s := "SELECT " || cols || " FROM " || tabl
  s ||:= " WHERE " || \filter
  # ok to omit order
  s ||:= " ORDER BY " || \order
  return sql(db, s)
end

procedure dbupdate(f, rec)
  s := "UPDATE " || tabl || " SET "
  # c1=..., c2=... # fieldnames=values,
  s ||:= " WHERE "
  # k1=... AND K2=...
  return sql(db, s)
end
