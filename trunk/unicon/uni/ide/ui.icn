###########################################################################
#
#	File:     ui.icn
#
#	Subject:  Unicon IDE, an integrated programming environment
#
#	Authors:  Hani Bani Salameh, Nolan Clayton and Clinton Jeffery
#
#	Date:     July 2, 2007
#
############################################################################
#
#  This program provides a simple multi-platform development environment
#  for Unicon.  It is gradually gaining features and usability.
#
#  To do:
#	keyboard shortcuts
#	multiple edit regions.
#	
############################################################################
#
#  Requires:  graphics, version 2 GUI libraries, and ivib
#
############################################################################
#
#  Links:  graphics, io, font_dlg
#
############################################################################

import gui
$include "guih.icn"
link mainbar
link getpaths
link classbrowser

global pnlToolbar, MsgBox, EditBoxt, FileTabSet, ClassTabSet, DevTabSet,
       FileBrowser, linebreak, dialogself, browser, docpath

#$define lpr "enscript -b \" \" -1 -Plex3normal"
##$define HELP_PATH "help"

$ifdef _UNIX
   $define PS  "/"
$else
   $define PS  "\\"
$endif

$ifdef _UNIX
   $define PATHSEP "/"
$else # implies Windows for now
   $define PATHSEP "\\"
$endif


class UIDE : Dialog(menu_1, menu_bar, tab_item_1, tab_item_2, tab_item_3, close_menu_item, exit_menu_item, file_menu, ivib_menu_item, new_menu_item, open_menu_item, print_menu_item, save_menu_item, saveas_menu_item, copy_menu_item, cut_menu_item, find_menu_item, goto_menu_item, matchparen_menu_item, menu_2, paste_menu_item, replace_menu_item, select_all_menu_item, undo_menu_item, uide, menu_separator_1, menubar)
   method component_setup()
      self.setup()

      pnlToolbar := Panel()
      pnlToolbar.set_pos("0", "25")
      pnlToolbar.set_size("100%", "25")
      pnlToolbar.set_draw_border()
      pnlToolbar.set_attribs("bg=light whitish gray", "resize=on")
      self.add(pnlToolbar)
      menubar.Menubar()
      ide.Toolbar(pnlToolbar) #This call to add a toolbar
#      FileBrowser.addreplace("file_contents", "tab_label", 0)

   end

   method IDEDialog()
   end

#
# Set Doc Path Proc:
#
method set_docpath()
match("Binaries at ", docpath := &features) |
Notice("What, no binaries?" ||
	"Have you added Unicon's bin directory to your path?")
docpath ?:= (="Binaries at " & tab(0))
if map(docpath[-4:0])==("bin/"|"bin\\") then docpath[-4:0] := ""
else write("did not find expected Unicon binaries in a bin/ directory")
end

#
# main initialization procedure
#
method ui_initialize()
local f, line
ui_ini := getenv("UNICONINI") | "ui.ini"
height := 400
width := 600
msglines := 7
font := "sans,15"
linebreak := "LF"                      # default to UNIX mode
if f := open(ui_ini) then {
while line := read(f) do {
	line ? {
	if ="msglines" then {
	tab(upto(&digits))
	msglines := integer(tab(many(&digits)))
	}
	else if ="height" then {
	tab(upto(&digits))
	height := integer(tab(many(&digits)))
	}
	else if ="width" then {
	tab(upto(&digits))
	width := integer(tab(many(&digits)))
	}
	else if ="font" then {
	tab(many('= \t'))
	font := tab(0)
	}
	else if ="linebreak" then {
	tab(many('= \t'))
	linebreak := tab(0)
	}
	}
	}
close(f)
}
wiconlog := tempname("ui",,(getenv("TEMP") | "/tmp"),5)
if not setenv("WICONLOG", wiconlog) then write("can't set WICONLOG")
xargs := ""
$ifdef _UNIX
every browser := getenv("BROWSER") | "netscape" | "mozilla"| "opera" do {
if stat(getpaths() || browser) then {
	MsgBox.set_contents(["found browser " || browser])
	break
	}
else browser := &null
}
$else
(browser := "\"" || WinAssociate("HTM") || "\"" ) |
write(
	"What, no browser?  Unicon's online help won't be readable until you\n_
	associate an HTML reader application with the HTM file extension.\n")
$endif
set_docpath()
end

   method end_dialog()
   end

   method init_dialog()
      ui_initialize()
      docpath := &null
      put(opened_files_list,"scratch")
      put(opened_files_locs,\filedirectory)

      ##ide_design()
   end

   method setup()
      self.set_attribs("size=750,560", "bg=pale gray", "label=Unicon IDE")
      DevTabSet := TabSet()
      DevTabSet.set_pos("0", "100%-110")
      DevTabSet.set_size("100%", "110")
      tab_item_1 := TabItem()
      tab_item_1.set_label("Messages")
      MsgBox := EditableTextList()
      MsgBox.set_pos("2", "2")
      MsgBox.set_size("100%-4", "100%-4")
      MsgBox.set_draw_border()
      MsgBox.set_attribs("bg=white")
      MsgBox.set_contents([""])
      tab_item_1.add(MsgBox)
      DevTabSet.add(tab_item_1)
      DevTabSet.set_which_one(tab_item_1)
      self.add(DevTabSet)
      FileTabSet := BufferTabSet()
      FileTabSet.set_pos("150", "50")
      FileTabSet.set_size("100%-150", "100%-160")
      FileTabSet.set_attribs("font=sans,15")
      tab_item_2 := TabItem()
      tab_item_2.set_label("scratch")
      EditBox := BuffEditableTextList()
      EditBox.set_pos("2", "2")
      EditBox.set_size("100%-4", "100%-4")
      EditBox.set_draw_border()
      EditBox.set_attribs("bg=white", "font=sans,14")
      EditBox.set_contents([""])
      tab_item_2.add(EditBox)
      FileTabSet.add(tab_item_2)
      FileTabSet.set_which_one(tab_item_2)
      self.add(FileTabSet)
      ClassTabSet := BufferTabSet()
      ClassTabSet.set_pos("0", "50")
      ClassTabSet.set_size("150", "100%-160")
      tab_item_3 := TabItem()
      tab_item_3.set_label("Class Browser")
      FileBrowser := ClassBrowser()
      FileBrowser.set_pos("2", "2")
      FileBrowser.set_size("100%-4", "100%-4")
      FileBrowser.set_draw_border()
      FileBrowser.set_attribs("bg=white")
      FileBrowser.set_select_one()
      tab_item_3.add(FileBrowser)
      ClassTabSet.add(tab_item_3)
      ClassTabSet.set_which_one(tab_item_3)
      self.add(ClassTabSet)
      pnlToolbar := Panel()
      pnlToolbar.set_pos("0", "25")
      pnlToolbar.set_size("100%", "25")
      self.add(pnlToolbar)
   end

   initially
      self.Dialog.initially()
      ide := IDE(FileTabSet, ClassTabSet, FileBrowser)  #contains the main ide functions
      dialogself := self
      menubar := Mainbar(JProject(), CProject(), UProject())
end


# These are primitive legacy Notice/TextDialog compatibility functions.
# They need to be improved/polished and eventually moved to the gui package.

$define ButtonWidth	 50	# minimum button width
$define ButtonHeight	 30	# button height
$define FieldWidth	 10	# default field width
$define OpenWidth	 50	# default field width for Open/SaveDialog

$define XOff		  0	# offset for text vidgets
$define XOffButton	 85	# initial x offset for buttons
$define XOffIncr	 15	# space between buttons

class Vdialog : Dialog(captions, labels, buttons, textfields, myanswer)
   method component_setup()
      self.setup()
   end

   method end_dialog()
   end

   method init_dialog()
   end

   method setup()
   local nlines := *captions + *labels + 2
   local label_2, text_button_1, text_field_1

      self.set_attribs("size=640," || (32 * nlines))
      every i := 1 to *captions do {
	 cap := Label()
	 cap.set_pos("175", integer(i *100 / nlines)|| "%")
	 cap.set_internal_alignment("l")
	 cap.set_label(captions[i])
	 self.add(cap)
	 }
      every i := 1 to *labels do {
	 label_2 := Label()
	 label_2.set_pos(117, integer((*captions + i)*100/nlines) || "%")
	 label_2.set_internal_alignment("l")
	 label_2.set_label(labels[i])
	 self.add(label_2)
	 }
      every i := 1 to *labels do {
	 text_field_1 := TextField()
	 text_field_1.set_pos(167, integer((*captions + i)*100/nlines) || "%")
	 text_field_1.set_size(60, 30)
	 text_field_1.set_draw_border()
	 text_field_1.set_contents("")
	 self.add(text_field_1)
	 }
      every i := 1 to *buttons do {
	 text_button_1 := TextButton()
	 text_button_1.set_pos( integer(i * 100 / (*buttons+1)) || "%",
			       integer((*captions + *labels + 1)*100/nlines) ||
			       "%" )
	 text_button_1.connect(self, "on_button", ACTION_EVENT)
	 text_button_1.clear_toggles()
	 text_button_1.set_label(buttons[i])
	 text_button_1.set_internal_alignment("c")
	 self.add(text_button_1)
	 }
   end

   method on_button(ev)
      myanswer := ev[3].label
      dispose()
   end

initially(caps, labs, btns)
   captions := caps
   labels := labs
   buttons := btns
   self.Dialog.initially()
end


procedure TextDialog(			#: text dialog
   win, captions, labels, defaults, widths, buttons, index
   )

   if type(win) ~== "window" then {
      win :=: captions :=: labels :=: defaults :=: widths :=: buttons :=:
         index
      win := &window
      /win := temp_win := WOpen("canvas=hidden", "bg=gray")
      }

   /captions := []
   /labels := []
   /defaults := []
   /widths := []
   /buttons := ["Okay", "Cancel"]
   /index := 1

   if type(captions) ~== "list" then captions := [captions]
   if type(labels) ~== "list" then labels := ([\labels] | [])
   if type(defaults) ~== "list" then defaults := ([\defaults] | [])
   if type(widths) ~== "list" then widths := ([\widths] | [default_width])
   if type(buttons) ~== "list" then buttons := [buttons]

   default_button := buttons[index] 		# null if out of bounds
   default_width := widths[-1] | FieldWidth

   maxl := 0
   every maxl <:= *(labels | defaults | widths)
   until *labels = maxl do put(labels, labels[-1] | "")
   until *defaults = maxl do put(defaults, defaults[-1] | "")
   until *widths = maxl do put(widths, widths[-1] | 10) 

   id := 0

   label_width := 0
   every label_width <:= TextWidth(win, !labels)
   if label_width > 0 then label_width +:= 15

   maxb := 0
   every maxb <:= TextWidth(win, !buttons)
   maxb +:= 10
   maxb <:= ButtonWidth

   lead := WAttrib(win, "leading")
   pad := 2 * lead
   cwidth := WAttrib(win, "fwidth")

   dialog := Vdialog(captions, labels, buttons)

   maxw := 0
   every maxw <:= TextWidth(win, !captions)

   y := -lead

   dialog.show_modal()
   dialog_button := dialog.myanswer
   return dialog_button
end

global dialog_button

procedure Notice(captions[])		#: notice dialog
   local win, temp_win
   static type

   initial type := proc("type", 0)	# protect attractive name

   if type(captions[1]) == "window" then
      win := get(captions)
   else {
      win := &window
      /win := temp_win := WOpen("canvas=hidden", "bg=gray")
      }

$ifdef _MS_WINDOWS_NT
   if p := proc("WinSelectDialog", 0) then {	# use built-in if available
      p(win, captions)
      dialog_button := "Okay"
      }
   else
$endif
      TextDialog(win, captions, , , , "Okay")

   dialog_value := &null

   WClose(\temp_win)

   return dialog_button

end

procedure main()
   local d
   d := UIDE()
   d.show_modal()
end

### Ivib-v2 layout ##
#class|Canvas|17|Name Table|table|integer|0|11|string|editable_text_lis
#t|integer|2|string|icon|integer|1|string|menu|integer|2|string|menu_ba
#r|integer|1|string|menu_separator|integer|1|string|panel|integer|1|str
#ing|tab_item|integer|4|string|tab_set|integer|3|string|text_list|integ
#er|2|string|text_menu_item|integer|18|string|tree|integer|1|SuperClass
# Name|string|Dialog|Import Name|string|gui|Button Groups|class|ButtonG
#roupSet|2|Parent Canvas|1|Boxes|list|0|Checkbox Groups|class|CheckBoxG
#roupSet|2|Parent Canvas|1|Boxes|list|0|Gen Indent|integer|3|Gen Main|i
#nteger|1|Gen Component Setup|integer|1|Gen Init Dialog|integer|1|Gen I
#nitially|integer|1|Dialog Struct|class|CDialog|4|Min Width|null|Min He
#ight|null|Ticker Rate|null|Attribs|list|2|string|bg=pale gray|string|l
#abel=Unicon IDE|Name|string|UIDE|Width|integer|750|Height|integer|560|
#Items|list|4|class|CanvasTabSet|27|Parent Canvas|1|Name|string|DevTabS
#et|Class Name|string|TabSet|Import Name|string|gui|X Fix|null|Y Fix|nu
#ll|W Fix|null|H Fix|null|W Default|null|H Default|null|X Spec|string|0
#|Y Spec|string|100%-110|W Spec|string|100%|H Spec|string|110|X Align|s
#tring|l|Y Align|string|t|Is shaded|null|Is Button Subclass|null|Draw B
#order|null|Attribs|list|0|Tooltip|null|Accel|null|Event Handlers|list|
#0|Class Variable|integer|1|Parent Component|1|Children|list|1|class|Ca
#nvasTabItem|28|Parent Canvas|1|Name|string|tab_item_1|Class Name|strin
#g|TabItem|Import Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fi
#x|null|W Default|null|H Default|null|X Spec|integer|0|Y Spec|integer|0
#|W Spec|string|100%|H Spec|string|100%|X Align|string|l|Y Align|string
#|t|Is shaded|null|Is Button Subclass|null|Draw Border|null|Attribs|lis
#t|0|Tooltip|null|Accel|null|Event Handlers|null|Class Variable|integer
#|1|Parent Component|10|Label|string|Messages|Parent TabSet|10|Children
#|list|1|class|CanvasEditableTextList|26|Parent Canvas|1|Name|string|Ms
#gBox|Class Name|string|EditableTextList|Import Name|string|gui|X Fix|n
#ull|Y Fix|null|W Fix|null|H Fix|null|W Default|null|H Default|null|X S
#pec|string|2|Y Spec|string|2|W Spec|string|100%-4|H Spec|string|100%-4
#|X Align|string|l|Y Align|string|t|Is shaded|null|Is Button Subclass|n
#ull|Draw Border|integer|1|Attribs|list|1|string|bg=white|Tooltip|null|
#Accel|null|Event Handlers|list|0|Class Variable|integer|1|Parent Compo
#nent|14|Contents|list|1|string||Which One|14|class|CanvasTabSet|27|Par
#ent Canvas|1|Name|string|FileTabSet|Class Name|string|BufferTabSet|Imp
#ort Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fix|null|W Defa
#ult|null|H Default|null|X Spec|string|150|Y Spec|string|50|W Spec|stri
#ng|100%-150|H Spec|string|100%-160|X Align|string|l|Y Align|string|t|I
#s shaded|null|Is Button Subclass|null|Draw Border|null|Attribs|list|1|
#string|font=sans,15|Tooltip|null|Accel|null|Event Handlers|list|0|Clas
#s Variable|integer|1|Parent Component|1|Children|list|1|class|CanvasTa
#bItem|28|Parent Canvas|1|Name|string|tab_item_2|Class Name|string|TabI
#tem|Import Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fix|null
#|W Default|null|H Default|null|X Spec|integer|0|Y Spec|integer|0|W Spe
#c|string|100%|H Spec|string|100%|X Align|string|l|Y Align|string|t|Is 
#shaded|null|Is Button Subclass|null|Draw Border|null|Attribs|list|0|To
#oltip|null|Accel|null|Event Handlers|null|Class Variable|integer|1|Par
#ent Component|21|Label|string|scratch|Parent TabSet|21|Children|list|1
#|class|CanvasEditableTextList|26|Parent Canvas|1|Name|string|EditBox|C
#lass Name|string|BuffEditableTextList|Import Name|string|gui|X Fix|nul
#l|Y Fix|null|W Fix|null|H Fix|null|W Default|null|H Default|null|X Spe
#c|string|2|Y Spec|string|2|W Spec|string|100%-4|H Spec|string|100%-4|X
# Align|string|l|Y Align|string|t|Is shaded|null|Is Button Subclass|nul
#l|Draw Border|integer|1|Attribs|list|2|string|bg=white|string|font=san
#s,14|Tooltip|null|Accel|null|Event Handlers|list|0|Class Variable|inte
#ger|1|Parent Component|25|Contents|list|1|string||Which One|25|class|C
#anvasTabSet|27|Parent Canvas|1|Name|string|ClassTabSet|Class Name|stri
#ng|BufferTabSet|Import Name|string|gui|X Fix|null|Y Fix|null|W Fix|nul
#l|H Fix|null|W Default|null|H Default|null|X Spec|string|0|Y Spec|stri
#ng|50|W Spec|string|150|H Spec|string|100%-160|X Align|string|l|Y Alig
#n|string|t|Is shaded|null|Is Button Subclass|null|Draw Border|null|Att
#ribs|list|0|Tooltip|null|Accel|null|Event Handlers|list|0|Class Variab
#le|integer|1|Parent Component|1|Children|list|1|class|CanvasTabItem|28
#|Parent Canvas|1|Name|string|tab_item_3|Class Name|string|TabItem|Impo
#rt Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H Fix|null|W Defau
#lt|null|H Default|null|X Spec|integer|0|Y Spec|integer|0|W Spec|string
#|100%|H Spec|string|100%|X Align|string|l|Y Align|string|t|Is shaded|n
#ull|Is Button Subclass|null|Draw Border|null|Attribs|list|0|Tooltip|nu
#ll|Accel|null|Event Handlers|null|Class Variable|integer|1|Parent Comp
#onent|32|Label|string|Class Browser|Parent TabSet|32|Children|list|1|c
#lass|CanvasTree|29|Parent Canvas|1|Name|string|FileBrowser|Class Name|
#string|Tree|Import Name|string|gui|X Fix|null|Y Fix|null|W Fix|null|H 
#Fix|null|W Default|null|H Default|null|X Spec|string|2|Y Spec|string|2
#|W Spec|string|100%-4|H Spec|string|100%-4|X Align|string|l|Y Align|st
#ring|t|Is shaded|null|Is Button Subclass|null|Draw Border|integer|1|At
#tribs|list|1|string|bg=white|Tooltip|null|Accel|null|Event Handlers|li
#st|0|Class Variable|integer|1|Parent Component|36|Select One|integer|1
#|Select Many|null|Show Root Handles|integer|1|Show Root|integer|1|Whic
#h One|36|class|CanvasPanel|26|Parent Canvas|1|Name|string|pnlToolbar|C
#lass Name|string|Panel|Import Name|string|gui|X Fix|null|Y Fix|null|W 
#Fix|null|H Fix|null|W Default|null|H Default|null|X Spec|string|0|Y Sp
#ec|string|25|W Spec|string|100%|H Spec|string|25|X Align|string|l|Y Al
#ign|string|t|Is shaded|null|Is Button Subclass|null|Draw Border|null|A
#ttribs|list|0|Tooltip|null|Accel|null|Event Handlers|list|0|Class Vari
#able|integer|1|Parent Component|1|Children|list|0|Initial Focus|null|E
#vent Handlers|list|0|
