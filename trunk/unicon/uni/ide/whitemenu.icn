################################################################
#
#   File:         whitemenu.icn
#
#   Subject    SubClass of Menu:  
#
#   Author:   Nolan Clayton
#
#   Date:       May 25, 04
#
################################################################

$include "guih.icn"


#################################################################
# class White Menu: Used to overide the display method.
#################################################################
class   WhiteMenu : Menu(  )
   
   method display()
      local cw, c,oldfg

      if /self.temp_win then {
                   
         #################################################################
         #Open a temporary area for the menu and copy.
         self.temp_win := WOpen("canvas=hidden", "size=" || self.w || "," || self.h)
         CopyArea(self.parent_menu_bar.get_parent_win(), self.temp_win, self.x, self.y, self.w, self.h, 0, 0)
      }

      cw := self.parent_menu_bar.cbwin
      
      #######################################
      #Clear area and draw rectangle around whole
      EraseRectangle(cw, self.x, self.y, self.w, self.h)

      oldfg := Fg(cw)
      self.parent_menu_bar.set_attribs("fg=white")
      FillRectangle(cw, self.x, self.y , self.w, self.h)
      self.parent_menu_bar.set_attribs("fg=black")
      DrawRectangle(cw, self.x, self.y, self.w-1, self.h-1)
          
      ###############################################################
      #Draw individual items, with rectangle around open sub-item
      every c := !self.menus do {
         c.display_label()
         if c === \self.which_open then
            DrawRaisedRectangle(cw, c.label_x, c.label_y, self.w - 2 * BORDER_WIDTH, c.label_h,1)
      }
      CopyArea(cw, self.parent_menu_bar.cwin, self.x, self.y, self.w, self.h, self.x, self.y)
      self.parent_menu_bar.set_attribs("fg="||oldfg)

   end
   
   
   initially(argv[])
      self$Menu.initially()
      if *argv > 0 then set_fields(argv)
end
