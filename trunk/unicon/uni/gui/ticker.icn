#
# $Id: ticker.icn,v 1.3 2004-09-18 18:44:58 rparlett Exp $
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

package gui
link graphics
import lang
import util

$include "guih.icn"

#
#
# A class for an object with a ticker.
# This class should be subclassed by a class that wishes to
# have a ticker facility, namely implement a method that is
# called repeatedly at set intervals.
#
class Ticker : Object : Connectable(
   ticker_rate,             # Ticker rate
   next_tick_time           # Time of next tick
   )

   #
   # This method is called repeatedly by the dispatcher.  It
   # fires off events to its listeners.
   #
   method tick()
      fire("tick")
   end

   #
   # Start the ticker process, with the {tick()}
   # method being invoked approximately every {n} milliseconds.
   #
   # @param n   the ticker interval in milliseconds.
   # @param d   the initial delay, if any (default 0)
   #
   method start(n, d)
      dispatcher.start_ticker(self, n, d)
   end

   #
   # Stop the ticker.
   #
   method stop()
      dispatcher.stop_ticker(self)
   end

   #
   # Change the interval of the ticker
   # @param n   the new interval.
   #
   method retime(n)
      dispatcher.retime_ticker(self, n)
   end

   #
   # Succeeds if and only if the ticker is active.
   #
   method is_ticking()
      return \ticker_rate
   end
end
