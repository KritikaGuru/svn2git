#
# $Id: textdisplay.icn,v 1.3 2006-01-16 00:32:12 rparlett Exp $
#
# This file is in the public domain.
#
# Author: Robert Parlett (parlett@dial.pipex.com)
#

package gui
link graphics

$include "guih.icn"

#
# This class displays a list of strings.
#
class TextDisplay : DisplayScrollArea(contents)
   method get_line_count()
      return *self.contents
   end

   #
   # Set the data to be displayed.
   # @param x  The list of data.
   #
   method set_contents(x)
      self.contents := x
      contents_changed()
   end

   #
   # Call this method if the contents list, previously
   # set with {set_contents()}, has changed.
   #
   method contents_changed()
      compute_and_invalidate()
   end

   #
   # Return the contents of the {ScrollArea}
   #
   method get_contents()
      return self.contents
   end

   method get_line_height()
      return WAttrib(self.cwin, "fheight")
   end

   method get_view_x_padding()
      return DEFAULT_TEXT_X_SURROUND
   end

   method get_view_y_padding()
      return DEFAULT_TEXT_Y_SURROUND
   end

   method get_subject_width()
      mw := 0
      every s := !self.contents do
         mw <:= TextWidth(self.cwin, detab(s))
      return mw
   end

   method draw_line(xp, yp, i)
      local s
      s := contents[i]

      left_string(self.cbwin, xp, yp, detab(s))
   end

   method set_one(attr, val)
      case attr of {
         "contents" : set_contents(val)
         default: self.LineBasedScrollArea.set_one(attr, val)
      }
   end

   initially(a[])
      self.DisplayScrollArea.initially()
      set_fields(a)
end
